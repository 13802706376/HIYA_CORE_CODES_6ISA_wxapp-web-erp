<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunnex.ops.erp.modules.act.dao.TaskExtDao">
    
	<sql id="taskExtColumns">
		a.id AS "id",
		a.task_id AS "taskId",
		a.pending_prod_flag AS "pendingProdFlag",
		a.status AS "status",
		a.remark AS "remark",
		a.create_by AS "createBy",
		a.create_date AS "createDate",
		a.update_by AS "updateBy",
		a.update_date AS "updateDate"
	</sql>
	
	<sql id="taskExtJoins">
	</sql>
    
	<select id="get" resultType="TaskExt">
		SELECT 
			<include refid="taskExtColumns"/>
		FROM ACT_RU_TASK_EXT a
		<include refid="taskExtJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="TaskExt">
		SELECT 
			<include refid="taskExtColumns"/>
		FROM ACT_RU_TASK_EXT a
		<include refid="taskExtJoins"/>
		<where>
			
			<if test="taskId != null and taskId != ''">
				AND a.task_id = #{taskId}
			</if>
			<if test="pendingProdFlag != null and pendingProdFlag != ''">
				AND a.pending_prod_flag = #{pendingProdFlag}
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="TaskExt">
		SELECT 
			<include refid="taskExtColumns"/>
		FROM ACT_RU_TASK_EXT a
		<include refid="taskExtJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO ACT_RU_TASK_EXT(
			id,
			task_id,
			pending_prod_flag,
			status,
			remark,
			create_by,
			create_date,
			update_by,
			update_date
		) VALUES (
			#{id},
			#{taskId},
			#{pendingProdFlag},
			#{status},
			#{remark},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate}
		)
	</insert>
	
	<update id="update">
		UPDATE ACT_RU_TASK_EXT SET 	
			task_id = #{taskId},
			pending_prod_flag = #{pendingProdFlag},
			status = #{status},
			remark = #{remark}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM ACT_RU_TASK_EXT
		WHERE id = #{id}
	</update>
	
	<update id="updateTaskState">
		UPDATE ACT_RU_TASK_EXT 
			<set>
				<if test="pendingProdFlag != null">pending_prod_flag = #{pendingProdFlag},</if>
				<if test="status != null">status = #{status},</if>
				<if test="updateDate != null">update_date = #{updateDate}</if>
			</set>
		WHERE task_id = #{taskId}
	</update>
	
</mapper>